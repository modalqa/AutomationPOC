"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const $ = require("jquery");
const Constants_1 = require("../../processor/Constants");
const AnsiParser = require("ansi-parser");
class ImageSnapshotDifference {
    static containsDiff(jestFailureMessage) {
        let isFailure = false;
        for (const indicator of ImageSnapshotDifference.DIFF_INDICATOR) {
            if (jestFailureMessage.indexOf(indicator) >= 0) {
                isFailure = true;
                break;
            }
        }
        return isFailure;
    }
    static generate(jestFailureMessage) {
        const imageDiffFilename = ImageSnapshotDifference.parseDiffImageName(jestFailureMessage);
        const errorMessage = ImageSnapshotDifference.parseDiffError(jestFailureMessage);
        const diffDiv = document.createElement("div");
        diffDiv.className = "image-snapshot-diff";
        const diffMessage = document.createElement("span");
        diffMessage.textContent = errorMessage;
        diffMessage.className = "text-muted";
        diffDiv.appendChild(diffMessage);
        const diffImageLink = document.createElement("a");
        diffImageLink.href = Constants_1.Constants.IMAGE_SNAPSHOT_DIFF_DIR + imageDiffFilename;
        diffDiv.appendChild(diffImageLink);
        const diffImage = document.createElement("img");
        diffImage.src = Constants_1.Constants.IMAGE_SNAPSHOT_DIFF_DIR + imageDiffFilename;
        diffImageLink.appendChild(diffImage);
        return $(diffDiv).get(0);
    }
    static parseDiffImagePath(jestFailureMessage) {
        const match = ImageSnapshotDifference.DIFF_IMAGE.exec(jestFailureMessage);
        if (match) {
            return AnsiParser.removeAnsi(match[1]).trim();
        }
        return null;
    }
    static parseDiffImageName(jestFailureMessage) {
        const path = ImageSnapshotDifference.parseDiffImagePath(jestFailureMessage);
        if (path) {
            return path.replace(/^.*[\\\/]/, "");
        }
    }
    static parseDiffError(jestFailureMessage) {
        const match = ImageSnapshotDifference.DIFF_DETAILS.exec(jestFailureMessage);
        if (match) {
            return match[1];
        }
        return null;
    }
}
ImageSnapshotDifference.DIFF_INDICATOR = ["different from snapshot", "image to be the same size"];
ImageSnapshotDifference.DIFF_IMAGE = /See diff for details:\s*((.*?)\.png)/;
ImageSnapshotDifference.DIFF_DETAILS = /Error: (.*)/;
exports.ImageSnapshotDifference = ImageSnapshotDifference;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW1hZ2VTbmFwc2hvdERpZmZlcmVuY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcmVuZGVyL2RpZmYvSW1hZ2VTbmFwc2hvdERpZmZlcmVuY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw0QkFBNEI7QUFDNUIseURBQXNEO0FBQ3RELDBDQUEwQztBQU8xQztJQVlXLE1BQU0sQ0FBQyxZQUFZLENBQUMsa0JBQTBCO1FBQ2pELElBQUksU0FBUyxHQUFHLEtBQUssQ0FBQztRQUN0QixLQUFLLE1BQU0sU0FBUyxJQUFJLHVCQUF1QixDQUFDLGNBQWMsRUFBRTtZQUM5RCxJQUFJLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUU7Z0JBQzlDLFNBQVMsR0FBRyxJQUFJLENBQUM7Z0JBQ2pCLE1BQU07YUFDUDtTQUNGO1FBRUQsT0FBTyxTQUFTLENBQUM7SUFDckIsQ0FBQztJQVNNLE1BQU0sQ0FBQyxRQUFRLENBQUMsa0JBQTBCO1FBQzdDLE1BQU0saUJBQWlCLEdBQUcsdUJBQXVCLENBQUMsa0JBQWtCLENBQUMsa0JBQWtCLENBQUMsQ0FBQztRQUN6RixNQUFNLFlBQVksR0FBRyx1QkFBdUIsQ0FBQyxjQUFjLENBQUMsa0JBQWtCLENBQUMsQ0FBQztRQUVoRixNQUFNLE9BQU8sR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBbUIsQ0FBQztRQUNoRSxPQUFPLENBQUMsU0FBUyxHQUFHLHFCQUFxQixDQUFDO1FBRTFDLE1BQU0sV0FBVyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFvQixDQUFDO1FBQ3RFLFdBQVcsQ0FBQyxXQUFXLEdBQUcsWUFBWSxDQUFDO1FBQ3ZDLFdBQVcsQ0FBQyxTQUFTLEdBQUcsWUFBWSxDQUFDO1FBQ3JDLE9BQU8sQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLENBQUM7UUFFakMsTUFBTSxhQUFhLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQXNCLENBQUM7UUFDdkUsYUFBYSxDQUFDLElBQUksR0FBRyxxQkFBUyxDQUFDLHVCQUF1QixHQUFHLGlCQUFpQixDQUFDO1FBQzNFLE9BQU8sQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLENBQUM7UUFFbkMsTUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQXFCLENBQUM7UUFDcEUsU0FBUyxDQUFDLEdBQUcsR0FBRyxxQkFBUyxDQUFDLHVCQUF1QixHQUFHLGlCQUFpQixDQUFDO1FBQ3RFLGFBQWEsQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUM7UUFFckMsT0FBTyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzdCLENBQUM7SUFRTSxNQUFNLENBQUMsa0JBQWtCLENBQUMsa0JBQTBCO1FBRXZELE1BQU0sS0FBSyxHQUFHLHVCQUF1QixDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQztRQUUxRSxJQUFJLEtBQUssRUFBRTtZQUNQLE9BQU8sVUFBVSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUNqRDtRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFRTSxNQUFNLENBQUMsa0JBQWtCLENBQUMsa0JBQTBCO1FBRXZELE1BQU0sSUFBSSxHQUFHLHVCQUF1QixDQUFDLGtCQUFrQixDQUFDLGtCQUFrQixDQUFDLENBQUM7UUFFNUUsSUFBSSxJQUFJLEVBQUU7WUFDTixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1NBQ3hDO0lBQ0wsQ0FBQztJQU9PLE1BQU0sQ0FBQyxjQUFjLENBQUMsa0JBQTBCO1FBRXBELE1BQU0sS0FBSyxHQUFHLHVCQUF1QixDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQztRQUU1RSxJQUFJLEtBQUssRUFBRTtZQUNQLE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ25CO1FBRUQsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQzs7QUFsR2Esc0NBQWMsR0FBYSxDQUFDLHlCQUF5QixFQUFFLDJCQUEyQixDQUFDLENBQUM7QUFDcEYsa0NBQVUsR0FBVyxzQ0FBc0MsQ0FBQztBQUM1RCxvQ0FBWSxHQUFXLGFBQWEsQ0FBQztBQUp2RCwwREFxR0MifQ==